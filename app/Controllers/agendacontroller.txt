<?php

namespace App\Controllers;

use App\Models\AgendaModel;

class AgendaController extends BaseController
{
    // public function index(): mixed
    // {
    //     try {
    //         $model = new AgendaModel();
    //         $data['agendas'] = $model->findAll();
    //         return view('agenda', $data);
    //     } catch (\Exception $e) {
    //         log_message('error', $e->getMessage());
    //         return redirect()->to('/')->with('error', 'Terjadi kesalahan.');
    //     }
    // }

    public function index() 
    {
        $model = new AgendaModel();
        $data ['agendas'] = $model->findAll();
        return view('agenda', $data);
    }
    

    public function tambah()
    {
        // Validasi input
        $validation = \Config\Services::validation();
        $data = [
            'nomor' => $this->request->getPost('nomor'),
            'sifat' => $this->request->getPost('sifat'),
            'lampiran' => $this->request->getFile('lampiran'),
            'judul' => $this->request->getPost('judul'),
            'tanggal' => $this->request->getPost('tanggal'),
            'tempat' => $this->request->getPost('tempat'),
            'status' => 'Terjadwal',
        ];

        if ($this->validate([
            'nomor' => 'required',
            'sifat' => 'required',
            'lampiran' => 'uploaded[lampiran]|max_size[lampiran,2048]|ext_in[lampiran,pdf]',
            'judul' => 'required',
            'tanggal' => 'required',
            'tempat' => 'required',
            
        ])) {
            // Proses upload file
            if ($data['lampiran']->isValid() && !$data['lampiran']->hasMoved()) {
                $fileName = $data['lampiran']->getRandomName();
                $data['lampiran']->move('uploads', $fileName);
                $data['lampiran'] = $fileName; // Simpan nama file
            }

            // Simpan data ke database
            $model = new AgendaModel();
            $model->save($data);

            return redirect()->to('/agenda')->with('success', 'Data berhasil ditambahkan');
        } else {
            return redirect()->back()->withInput()->with('errors', $validation->getErrors());
        }
    }

    public function edit($id)
{
    $model = new AgendaModel();
    
    // Ambil data agenda berdasarkan ID
    $data['agenda'] = $model->find($id);
    
    // Jika data tidak ditemukan, redirect atau tampilkan error
    if (!$data['agenda']) {
        return redirect()->to('/agenda')->with('error', 'Data tidak ditemukan');
    }

    return view('edit_agenda', $data); // Tampilkan view edit
}

    public function update($id)
    {
        $model = new AgendaModel();
        
        // Validasi input
        $validation = \Config\Services::validation();
        $data = [
            'nomor' => $this->request->getPost('nomor'),
            'sifat' => $this->request->getPost('sifat'),
            'judul' => $this->request->getPost('judul'),
            'tanggal' => $this->request->getPost('tanggal'),
            'tempat' => $this->request->getPost('tempat'),
            'status' => $this->request->getPost('status'), // Jika Anda ingin mengizinkan perubahan status
        ];

        // Cek apakah ada file lampiran yang diunggah
        $lampiran = $this->request->getFile('lampiran');
        if ($lampiran && $lampiran->isValid() && !$lampiran->hasMoved()) {
            // Proses upload file
            $fileName = $lampiran->getRandomName();
            $lampiran->move('uploads', $fileName);
            $data['lampiran'] = $fileName; // Simpan nama file
        } else {
            // Jika tidak ada file baru, ambil nama file yang lama
            $existingAgenda = $model->find($id);
            $data['lampiran'] = $existingAgenda['lampiran'];
        }

        if ($this->validate([
            'nomor' => 'required',
            'sifat' => 'required',
            'judul' => 'required',
            'tanggal' => 'required',
            'tempat' => 'required',
        ])) {
            // Update data ke database
            $model->update($id, $data);
            return redirect()->to('/agenda')->with('success', 'Data berhasil diperbarui');
        } else {
            return redirect()->back()->withInput()->with('errors', $validation->getErrors());
        }
    }
    
    public function delete($id)
{
    $model = new AgendaModel();
    
    // Cek apakah data ada
    $agenda = $model->find($id);
    if (!$agenda) {
        return redirect()->to('/agenda')->with('error', 'Data tidak ditemukan');
    }

    // Hapus data dari database
    $model->delete($id);
    
    return redirect()->to('/agenda')->with('success', 'Data berhasil dihapus');
}
}